buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.'springboot.version'}"
    }
}

subprojects {
    task allDependenciesInsight(type: DependencyInsightReportTask, description: "Produce insight information for all dependencies") {}
    task allDependencies(type: DependencyReportTask, description: "Display a graph of all project dependencies") {}
}

task wrapper(type: Wrapper, description: "Update the Gradle wrapper") {
    gradleVersion = project."gradle.version"
}

task command(type: JavaExec, description: "Invokes the CAS Command Line Shell. Use -q to quiet Gradle output. To pass arguments, use '-Pcargs=arg1,arg2,arg3,...'") {
    doFirst {
        main = '-jar'
        standardInput = System.in
        if (project.hasProperty("cas.version")) {
            def casVersion = project.getProperty("cas.version")
            def commandFilePath = System.getProperty("user.dir") + File.separator + "cas" + File.separator + "build" + File.separator + "cas-server-support-shell-${casVersion}.jar"
            def commandFile = new File(commandFilePath)
            if (!commandFile.exists()) {
                new URL("http://repo1.maven.org/maven2/org/apereo/cas/cas-server-support-shell/${casVersion}/cas-server-support-shell-${casVersion}.jar").withInputStream{ i -> commandFile.withOutputStream{ it << i }}
            }
            def args2 = [commandFile]
            if (project.hasProperty('cargs')) {
                args2.addAll(cargs.trim().split(','))
            }
            args = args2
        }
    }
  
}
